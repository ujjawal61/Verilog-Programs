// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 19.1.0 Build 670 09/22/2019 SJ Lite Edition"

// DATE "10/26/2020 13:09:44"

// 
// Device: Altera EP4CE22F17C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module sequence_detector_fsm (
	Clk,
	X,
	Y);
input 	Clk;
input 	X;
output 	Y;

// Design Ports Information
// Y	=>  Location: PIN_L1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// X	=>  Location: PIN_L2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Clk	=>  Location: PIN_E1,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Y~output_o ;
wire \Clk~input_o ;
wire \Clk~inputclkctrl_outclk ;
wire \X~input_o ;
wire \Selector1~0_combout ;
wire \cur_state.S1~q ;
wire \next_state.S11~0_combout ;
wire \cur_state.S11~q ;
wire \next_state.S110~0_combout ;
wire \cur_state.S110~q ;
wire \next_state.S1100~0_combout ;
wire \cur_state.S1100~q ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X0_Y11_N9
cycloneive_io_obuf \Y~output (
	.i(\cur_state.S1100~q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Y~output_o ),
	.obar());
// synopsys translate_off
defparam \Y~output .bus_hold = "false";
defparam \Y~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y16_N8
cycloneive_io_ibuf \Clk~input (
	.i(Clk),
	.ibar(gnd),
	.o(\Clk~input_o ));
// synopsys translate_off
defparam \Clk~input .bus_hold = "false";
defparam \Clk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \Clk~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\Clk~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\Clk~inputclkctrl_outclk ));
// synopsys translate_off
defparam \Clk~inputclkctrl .clock_type = "global clock";
defparam \Clk~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N1
cycloneive_io_ibuf \X~input (
	.i(X),
	.ibar(gnd),
	.o(\X~input_o ));
// synopsys translate_off
defparam \X~input .bus_hold = "false";
defparam \X~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y11_N10
cycloneive_lcell_comb \Selector1~0 (
// Equation(s):
// \Selector1~0_combout  = (\X~input_o  & !\cur_state.S1~q )

	.dataa(gnd),
	.datab(\X~input_o ),
	.datac(\cur_state.S1~q ),
	.datad(gnd),
	.cin(gnd),
	.combout(\Selector1~0_combout ),
	.cout());
// synopsys translate_off
defparam \Selector1~0 .lut_mask = 16'h0C0C;
defparam \Selector1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y11_N11
dffeas \cur_state.S1 (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\Selector1~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\cur_state.S1~q ),
	.prn(vcc));
// synopsys translate_off
defparam \cur_state.S1 .is_wysiwyg = "true";
defparam \cur_state.S1 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y11_N12
cycloneive_lcell_comb \next_state.S11~0 (
// Equation(s):
// \next_state.S11~0_combout  = (\X~input_o  & \cur_state.S1~q )

	.dataa(gnd),
	.datab(gnd),
	.datac(\X~input_o ),
	.datad(\cur_state.S1~q ),
	.cin(gnd),
	.combout(\next_state.S11~0_combout ),
	.cout());
// synopsys translate_off
defparam \next_state.S11~0 .lut_mask = 16'hF000;
defparam \next_state.S11~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y11_N13
dffeas \cur_state.S11 (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\next_state.S11~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\cur_state.S11~q ),
	.prn(vcc));
// synopsys translate_off
defparam \cur_state.S11 .is_wysiwyg = "true";
defparam \cur_state.S11 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y11_N18
cycloneive_lcell_comb \next_state.S110~0 (
// Equation(s):
// \next_state.S110~0_combout  = (!\X~input_o  & \cur_state.S11~q )

	.dataa(gnd),
	.datab(gnd),
	.datac(\X~input_o ),
	.datad(\cur_state.S11~q ),
	.cin(gnd),
	.combout(\next_state.S110~0_combout ),
	.cout());
// synopsys translate_off
defparam \next_state.S110~0 .lut_mask = 16'h0F00;
defparam \next_state.S110~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y11_N19
dffeas \cur_state.S110 (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\next_state.S110~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\cur_state.S110~q ),
	.prn(vcc));
// synopsys translate_off
defparam \cur_state.S110 .is_wysiwyg = "true";
defparam \cur_state.S110 .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y11_N16
cycloneive_lcell_comb \next_state.S1100~0 (
// Equation(s):
// \next_state.S1100~0_combout  = (!\X~input_o  & \cur_state.S110~q )

	.dataa(gnd),
	.datab(gnd),
	.datac(\X~input_o ),
	.datad(\cur_state.S110~q ),
	.cin(gnd),
	.combout(\next_state.S1100~0_combout ),
	.cout());
// synopsys translate_off
defparam \next_state.S1100~0 .lut_mask = 16'h0F00;
defparam \next_state.S1100~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y11_N17
dffeas \cur_state.S1100 (
	.clk(\Clk~inputclkctrl_outclk ),
	.d(\next_state.S1100~0_combout ),
	.asdata(vcc),
	.clrn(vcc),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\cur_state.S1100~q ),
	.prn(vcc));
// synopsys translate_off
defparam \cur_state.S1100 .is_wysiwyg = "true";
defparam \cur_state.S1100 .power_up = "low";
// synopsys translate_on

assign Y = \Y~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_C1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_D2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_H1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_H2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_F16,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
